<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fun.lianys.blogserver.dao.ArticleDao">


  <resultMap id="userResultMap" type="user">
    <id property="id" column="user_id" />
    <result property="username" column="username" />
    <result property="avatar" column="avatar" />
  </resultMap>
  <resultMap id="tagResultMap" type="tag">
    <id property="id" column="tag_id" />
    <result property="tagName" column="tag_name" />
    <result property="color" column="tag_color" />
  </resultMap>

  <select id="selectTag" resultMap="tagResultMap">
    select 
    T.id as tag_id, 
    T.tag_name as tag_name, 
    T.color as tag_color
    from tag T left outer join article_tag AT on AT.tag_id=T.id
    where AT.article_id = #{article_id}
  </select>

  <resultMap id="articleResultMap" type="article">
    <id property="id" column="article_id" />
    <result property="articleName" column="article_name" />
    <result property="html" column="html" />
    <result property="raw" column="raw" />
    <result property="cover" column="cover" />
    <result property="createTime" column="create_time" />
    <result property="updateTime" column="update_time" />

    <association property="author" resultMap="userResultMap" />

    <collection property="tags" column="article_id" ofType="tag" select="selectTag" />
  </resultMap>

  <sql id="selectArticle">
    select
    A.id as article_id,
    article_name, 
    html,
    raw,
    cover,
    A.create_time as create_time,
    A.update_time as update_time,

    U.id as user_id, 
    U.username as username,
    U.avatar as avatar

    <!-- T.id as tag_id,
    T.tag_name as tag_name,
    T.color as tag_color -->

    from article A 
    left outer join user U on A.author=U.id
    <!-- left outer join article_tag AT on A.id=AT.article_id -->
    <!-- left outer join tag T on AT.tag_id=T.id -->
  </sql>

  <select id="list" resultMap="articleResultMap">
    <include refid="selectArticle"></include>
    <where>
      <if test="keyword != null and keyword != ''">
        (
          articleName like concat(#{keyword} "%")
          or html like concat(#{keyword} "%")
        )
      </if>
      <!-- and (A.status!="private" or A.status is null) -->
    </where>
    <if test="order != null and orderType">
        order by ${order} ${orderType}
    </if>
  </select>

  <select id="findOne" resultMap="articleResultMap">
    <include refid="selectArticle"></include>
    where A.id = #{id}
  </select>


  <update id="updateTagBatch">
    insert into article_tag (article_id, tag_id)
    values
    <foreach collection="tags" item="item" index="index" separator=",">
        ( #{articleId}, #{item} )
    </foreach>
    ON DUPLICATE KEY UPDATE article_id = VALUES(article_id), tag_id = VALUES(tag_id);
  </update>

  <insert id="insertTags">
    insert into article_tag (article_id, tag_id)
    values
    <foreach collection="tags" item="item" index="index" separator=",">
        ( #{articleId}, #{item} )
    </foreach>
  </insert>

  <delete id="deleteAllTags">
    delete from article_tag where article_id=#{articleId}
  </delete>

</mapper>