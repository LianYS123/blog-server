<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fun.lianys.blogserver.dao.UserDao">
  <resultMap id="userResultMap" type="user">
    <id property="id" column="id" />
    <result property="username" column="username" />
    <result property="avatar" column="avatar" />
    <result property="createTime" column="create_time" />
    <result property="updateTime" column="update_time" />
  </resultMap>
  <select id="list" resultMap="userResultMap">
    select `id`, `username`, `avatar`, `create_time`, `update_time` from user
    <where>
      <if test="keyword != null and keyword != ''">
        ( `username` like concat(#{keyword} "%") )
      </if>
      and status is null
    </where>
  </select>
  <update id="updateUserInfo">
    update user
    <trim prefix="set" suffixOverrides="," suffix=" where id = #{id}">
      <if test="username != null and username.length()>0"> username=#{username} , </if>
      <!-- <if test="password != null and password.length()>0"> password=#{password} , </if> -->
      <if test="avatar != null and avatar.length()>0"> avatar=#{avatar} , </if>
      <if test="updateTime != null"> update_time=#{updateTime} , </if>
    </trim>
  </update>
  <update id="changeStatus">
    update user set status=#{status} where id=#{id}
  </update>
  <insert id="add">
    insert into user
    <trim prefix="set" suffixOverrides=",">
      <if test="username != null and username.length()>0"> username=#{username} , </if>
      <if test="password != null and password.length()>0"> password=#{password} , </if>
      <if test="avatar != null and avatar.length()>0"> avatar=#{avatar} , </if>
      <if test="createTime != null"> create_time=#{createTime} , </if>
      <if test="updateTime != null"> update_time=#{updateTime} , </if>
    </trim>
  </insert>

  <insert id="addUserRoles">
    insert into user_role values
    <foreach item="roleId" index="index" separator="," collection="roles"> ( #{userId}, #{roleId} ) </foreach>
  </insert>

  <delete id="deleteAllRoles">
      delete from user_role where user_id = #{userId}
  </delete>

</mapper>